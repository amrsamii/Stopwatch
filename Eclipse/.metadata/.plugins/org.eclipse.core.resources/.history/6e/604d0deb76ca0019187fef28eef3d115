#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

unsigned char time[6] = {0};
/*
unsigned short sec_1 = 0;
unsigned short sec_2 = 0;
unsigned short min_1 = 0;
unsigned short min_2 = 0;
unsigned short hour_1 = 0;
unsigned short hour_2 = 0;
 */
void Timer1_CTC_Init(void){

	TCCR1A = (1 << FOC1A); // Channel 1 is non-PWM

	// CTC Mode
	// 1024 Prescaler
	TCCR1B = (1 << WGM12) | (1 << CS10) | (1 << CS12);
	TCNT1 = 0;
	OCR1A = 1000;
	TIMSK |= (1 << OCIE1A);
}
ISR(TIMER1_COMPA_vect){

	/*
	if(sec_2 == 5 && sec_1 == 9){
		sec_1 = 0;
		sec_2 = 0;
	}
	else if(sec_1 == 9){
		sec_1 = 0;
		sec_2++;
	}else{
		sec_1++;
	}
	 */

	if(time[1] == 5 && time[0] == 9){
		time[1] = 0;
		time[0] = 0;
	}
	else if(time[0] == 9){
		time[0] = 0;
		time[1]++;
	}else{
		time[0]++;
	}
}
int main(){
	unsigned char i;
	DDRC |= 0x0F;
	PORTC &= ~ 0x0F;
	DDRA |= 0x3F;
	PORTA &= ~0x3F;
	Timer1_CTC_Init();
	SREG |= (1 << 7);

	while(1){

		/*
		for(i = 0; i < 6; i++){
			PORTA = (1 << i);
			PORTC = (PORTC & 0xF0) | (time[i] & 0x0F);
			_delay_ms(10);
		}
*/
		PORTA = (1 << 0);
		PORTC = (PORTC & 0xF0) | (time[0] & 0x0F);
		_delay_ms(20);
		PORTA = (1 << 1);
		PORTC = (PORTC & 0xF0) | (time[1] & 0x0F);
		_delay_ms(20);
	}
}
