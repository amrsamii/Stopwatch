#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

unsigned char time[6] = {0};
/*
unsigned short sec_1 = 0;
unsigned short sec_2 = 0;
unsigned short min_1 = 0;
unsigned short min_2 = 0;
unsigned short hour_1 = 0;
unsigned short hour_2 = 0;
 */
void Timer1_CTC_Init(void){

	TCCR1A = (1 << FOC1A); // Channel 1 is non-PWM

	// CTC Mode
	// 1024 Prescaler
	TCCR1B = (1 << WGM12) | (1 << CS10) | (1 << CS12);
	TCNT1 = 0;
	OCR1A = 1000;
	TIMSK |= (1 << OCIE1A);
}
ISR(TIMER1_COMPA_vect){

	if(
			time[5] == 9 && time[4] == 9
			&& time[3] == 5 && time[2] == 9
			&& time[1] == 5 && time[0] == 9){


		time[5] = time[4] = time[3] = time[2] = time[1] = time[0] = 0;

	}else if(time[4] == 9 && time[3] == 5 && time[2] == 9
				&& time[1] == 5 && time[0] == 9){
		 time[4] = time[3] = time[2] = time[1] = time[0] = 0;
		 time[5]++ ;

	 }else if(time[3] == 5 && time[2] == 9 && time[1] == 5 && time[0] == 9){
		 time[3] = time[2] = time[1] = time[0] = 0;
		 time[4]++ ;

	 }else if(time[2] == 9 && time[1] == 5 && time[0] == 9){
		 time[2] = time[1] = time[0] = 0;
		 time[3]++;
	 }else if(time[1] == 5 && time[0] == 9){
		 time[2]++;
		time[1] = time[0] = 0;
	}
	else if(time[0] == 9){
		time[0] = 0;
		time[1]++;
	}else{
		time[0]++;
	}
}
int main(){
	unsigned char i;
	DDRC |= 0x0F;
	PORTC &= ~ 0x0F;
	DDRB |= 0x3F;
	PORTB &= ~0x3F;
	Timer1_CTC_Init();
	SREG |= (1 << 7);

	while(1){

			if(i == 6)
				i = 0;
			PORTB = (1 << i);
			PORTC = (PORTC & 0xF0) | (time[i] & 0x0F);
			i++;
			_delay_ms(1);



	}
}
